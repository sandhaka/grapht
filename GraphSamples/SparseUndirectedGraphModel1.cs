using GraphT.Models.Abstractions;

namespace GraphSamples;

public class SparseUndirectedGraphModel1 : IGraphMatrixModel<int>
{
    public decimal[,] Matrix => new decimal[,]
    {
        { 0, 97, 0, 0, 0, 75, 51, 58, 0, 18, 0, 63, 0, 0, 95, 0, 22, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 97, 0, 50, 0, 37, 97, 89, 0, 32, 44, 0, 0, 0, 0, 36, 70, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 50, 0, 37, 38, 4, 0, 14, 0, 86, 0, 0, 33, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 37, 0, 67, 92, 0, 76, 61, 22, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 37, 38, 67, 0, 93, 26, 67, 0, 97, 0, 0, 57, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 75, 97, 4, 92, 93, 0, 29, 65, 64, 91, 47, 0, 0, 0, 47, 0, 0, 62, 13, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 51, 89, 0, 0, 26, 29, 0, 53, 35, 65, 88, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 58, 0, 14, 76, 67, 65, 53, 0, 0, 0, 0, 73, 0, 0, 0, 0, 16, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 32, 0, 61, 0, 64, 35, 0, 0, 0, 0, 37, 90, 86, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 18, 44, 86, 22, 97, 91, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 47, 88, 0, 0, 0, 0, 0, 55, 72, 20, 6, 0, 25, 86, 4, 0, 0, 0, 41, 0, 95, 38, 20, 97, 0 },
        { 63, 0, 0, 0, 0, 0, 0, 73, 37, 0, 0, 0, 0, 85, 24, 89, 67, 53, 8, 53, 0, 0, 49, 0, 0, 0, 45, 10, 0, 0 },
        { 0, 0, 33, 0, 57, 0, 0, 0, 90, 0, 55, 0, 0, 0, 24, 62, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 36, 0, 63, 0, 34, 0, 86, 0, 72, 85, 0, 0, 47, 61, 89, 90, 56, 0, 0, 70, 63, 0, 0, 0, 0, 0, 0, 37 },
        { 95, 36, 0, 0, 0, 47, 0, 0, 0, 0, 20, 24, 24, 47, 0, 9, 0, 0, 0, 64, 0, 0, 12, 39, 33, 0, 0, 0, 0, 0 },
        { 0, 70, 0, 0, 0, 0, 0, 0, 29, 0, 6, 89, 62, 61, 9, 0, 0, 0, 98, 87, 0, 44, 12, 0, 0, 0, 0, 80, 0, 0 },
        { 22, 51, 0, 46, 0, 0, 0, 16, 0, 7, 0, 67, 0, 89, 0, 0, 0, 16, 0, 37, 55, 0, 0, 0, 0, 0, 0, 0, 48, 52 },
        { 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 25, 53, 0, 90, 0, 0, 16, 0, 53, 12, 43, 0, 0, 0, 54, 0, 46, 0, 92, 0 },
        { 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 86, 8, 0, 56, 0, 98, 0, 53, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97 },
        { 50, 0, 0, 0, 0, 6, 0, 14, 0, 91, 4, 53, 67, 0, 64, 87, 37, 12, 35, 0, 0, 0, 10, 34, 0, 0, 50, 0, 59, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 43, 0, 0, 0, 10, 38, 35, 73, 95, 48, 45, 61, 81 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 44, 0, 0, 0, 0, 10, 0, 0, 30, 66, 87, 0, 0, 11, 58 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 63, 12, 12, 0, 0, 0, 10, 38, 0, 0, 0, 16, 0, 62, 29, 64, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 39, 0, 0, 0, 0, 34, 35, 30, 0, 0, 44, 88, 77, 52, 42, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 54, 0, 0, 73, 66, 16, 44, 0, 0, 61, 69, 34, 73 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 87, 0, 88, 0, 0, 45, 30, 30, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 45, 0, 0, 0, 0, 0, 46, 0, 50, 48, 0, 62, 77, 61, 45, 0, 86, 84, 9 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 10, 0, 0, 0, 80, 0, 0, 0, 0, 45, 0, 29, 52, 69, 30, 86, 0, 15, 39 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 48, 92, 0, 59, 61, 11, 64, 42, 34, 30, 84, 15, 0, 14 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 52, 0, 97, 0, 81, 58, 0, 0, 73, 0, 9, 39, 14, 0 },
    };

    public int[] Nodes => Enumerable.Range(0, 30).ToArray();
}